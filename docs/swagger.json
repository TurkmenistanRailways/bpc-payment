{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/check-version": {
            "get": {
                "description": "This API endpoint checks the versions of E-commerce Payment Gateway data for two URLs constructed from a provided base URL in *ENV*.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "epg"
                ],
                "summary": "Check EPG Versions",
                "responses": {
                    "200": {
                        "description": "Success response containing versions for both URLs",
                        "schema": {
                            "$ref": "#/definitions/checkversion.EPGVersionsResponse"
                        }
                    },
                    "500": {
                        "description": "Check version function error",
                        "schema": {
                            "$ref": "#/definitions/checkversion.EPGVersionsResponse"
                        }
                    }
                }
            }
        },
        "/register-order": {
            "post": {
                "description": "Register an order for payment processing.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "epg"
                ],
                "summary": "Order Registration",
                "parameters": [
                    {
                        "description": "Order Registration Request Body",
                        "name": "requestBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/orderregistration.OrderRegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful order registration",
                        "schema": {
                            "$ref": "#/definitions/orderregistration.OrderRegistrationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or parameters",
                        "schema": {
                            "$ref": "#/definitions/constants.HttpError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "checkversion.EPGVersionsResponse": {
            "type": "object",
            "properties": {
                "error1": {
                    "type": "string"
                },
                "error2": {
                    "type": "string"
                },
                "version1": {
                    "type": "string"
                },
                "version2": {
                    "type": "string"
                }
            }
        },
        "constants.HttpError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "orderregistration.OrderRegistrationRequest": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Order amount in the minor denomination (for example, cents).",
                    "type": "integer"
                },
                "bindingId": {
                    "description": "Binding and payment method\n\n\t\tIdentifier of the binding that was created earlier.\n\t\tIt may be used only if the merchant has the permission to work with bindings.\n\t\tIf this parameter is sent in the registerOrder request, the following actions apply:\n\t\t1. This order can be paid only by binding.\n\t\t2. The payer is redirected to a payment page where the CVC must be entered.",
                    "type": "string",
                    "maxLength": 255
                },
                "clientId": {
                    "description": "Customer identifier in the merchant system. It is used in the bindings functionality.\n\t\tThis parameter may be present, if the merchant has the permissions to create and manage bindings\n\t\t(the Merchant is allowed to use bindings merchant option and other,\n\t\t\tsee “Main information tab” in the Merchants section of EPG user guide.)",
                    "type": "string",
                    "maxLength": 512,
                    "minLength": 1
                },
                "currency": {
                    "description": "Payment currency code in the ISO 4217 format",
                    "type": "string",
                    "maxLength": 3,
                    "minLength": 3
                },
                "description": {
                    "description": "Free form description of the order.",
                    "type": "string",
                    "maxLength": 512
                },
                "email": {
                    "description": "If notifying customers is enabled, the customer’s email address to send notifications to.",
                    "type": "string"
                },
                "expirationDate": {
                    "description": "Date and time when the order is terminated. The following format is used: yyyy-MM-ddTHH:mm:ss\n\t\tIf this parameter is not specified, the sessionTimeoutSecs parameter is used to determine the\n\t\tdate and time when the order is terminated.",
                    "type": "string"
                },
                "features": {
                    "description": "Parameter that enables switching on 3-D Secure check for a merchant.\n\t\tThe available values are:\n\t\t· FORCE_SSL — in this case, the SSL payment allowed option must be enabled for the merchant.\n\t\t· FORCE_TDS — in this case, the following options must be enabled for the merchant\n\t\tfor 3-D Secure checks in different networks:\n\t\toMasterCard Identity Check payments oVISA Secure payments\n\t\toMirAccept payments\n\t\toCUP 3SD payments\n\t\toDiners Club ProtectBuy payments oJCB J/Secure payments\n\t\toAmEx SafeKey payments\n\t\tSee 3DS configuration tab in the Merchants section in SmartVista E-commerce Payment Gateway User Guide.",
                    "type": "string"
                },
                "jsonParams": {
                    "description": "Additional information\n\n\t\tFields used to store additional information. The type is as follows:\n\t\t{\"param\":\"value\",\"param2\":\"value2\"}",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                },
                "language": {
                    "description": "Optional fields\n\n\t\tLanguage code in the ISO 639-1 format.\n\t\tIf unspecified, SmartVista E-commerce Payment Gateway uses\n\t\tthe default language from the merchant settings.\n\n\t\tError messages are returned in this language.",
                    "type": "string",
                    "maxLength": 2,
                    "minLength": 2
                },
                "orderNumber": {
                    "description": "Order details\n\n\t\tNumber (identifier) of the order in the merchant’s online store system.\n\t\tIt is unique for every store in the system and is generated on the order registration.",
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 1
                },
                "password": {
                    "description": "User’s password.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                },
                "paymentWay": {
                    "description": "Payment method used for the payment.\n\t\tThe possible values are:\n\t\t· CARD — Payment made by entering the card details\n\t\t· CARD_BINDING — Payment made using a binding\n\t\t· CARD_MOTO — Payment made using the call\n\t\tcenter\n\t\t· UPOP_MOTO (CUP UPOP MOTO) — Payment made China UnionPay Express Pay\n\t\t· UPOP — Payment made China UnionPay Secure Pay\n\t\t· FILE_BINDING — Payment made using a binding uploaded in a file\n\t\t· P2P — Payment made when transferring funds from one card to another\n\t\t· APPLE_PAY— Payment made using the Apple Pay service\n\t\t· MASTERPASS — Payment made using a Masterpass e-wallet\n\t\t· OTHER — Payment used for orders processed outside EPG\n\t\t· GOOGLE_PAY — Payment made using the Google Pay service\n\t\t· SAMSUNG_PAY — Payment made using the Samsung Pay service",
                    "type": "string",
                    "maxLength": 32
                },
                "phone": {
                    "description": "If notifying customers is enabled, the customer’s phone number to send SMS notifications to.",
                    "type": "string",
                    "maxLength": 255
                },
                "recurrenceEndDate": {
                    "description": "Date when the recurring payment ends. The date format is YYYYMMDD.\n\t\tThe default value (if empty) is infinite.\n\t\tYYYYMMDD 23:59:59 time is used for the end date.",
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 8
                },
                "recurrenceFrequency": {
                    "description": "Parameter is used only for automatic recurring\n\t\tpayments. It is not required for manual\n\t\tpayments. See Specifying reccurenceFrequency\n\t\tfor information about how to configure this parameter.",
                    "type": "string"
                },
                "recurrenceStartDate": {
                    "description": "Date when the recurring payment starts. The date format is YYYYMMDD.\n\t\tYYYYMMDD 00:00:00 time is used for the start date",
                    "type": "string",
                    "maxLength": 8,
                    "minLength": 8
                },
                "recurrenceType": {
                    "description": "Recurring payments (mandatory for recurring payments)\n\n\t\tWay in which subsequent recurring payments are processed:\n\t\t· MANUAL — for manual processing of recurring payments scheduled on the merchant side.\n\t\t· AUTO — for automatic handling of payments scheduled on the EPG side.\n\t\tThis parameter is mandatory to register a recurring payment.",
                    "type": "string"
                },
                "returnUrl": {
                    "description": "URL to which the customer is redirected after a successful payment.",
                    "type": "string",
                    "maxLength": 512,
                    "minLength": 1
                },
                "sessionTimeoutSecs": {
                    "description": "Order lifetime\n\n\t\tThe order lifespan duration can be taken from the following parameters (from the highest priority to the lowest):\n\t\t· sessionTimeoutSecs transferred in a request. It overrides all other order timeout settings.\n\t\t· If the sessionTimeoutSecs parameter is not specified, the value from the merchant’s settings is used.\n\t\tIt is configured by the Alternative session timeout option that must be enabled and\n\t\tthe Session duration additional parameter that must be specified.\n\t\t· If none of the above mentioned settings is specified\n\t\t(neither sessionTimeoutSecs nor merchant’s timeout),\n\t\tthe default value set in Administration \u003e System settings by the default.session.timeout.milliseconds\n\t\tsystem setting is used (the default value is 1200 seconds) .\n\t\tIf the request contains the expirationDate parameter, the sessionTimeoutSecs parameter is ignored.",
                    "type": "integer"
                },
                "threeDS2Params": {
                    "description": "3D Secure 2 parameters (conditional)\n\n\t\tParameters of the 3-D Secure 2 protocol\n\t\tauthentication. The threeDS2Params parameter is\n\t\ta JSON-based structure. See 3-D Secure 2\n\t\t498\n\t\tparameter list\n\t\tfor details.\n\t\tThis parameter is used for 3-D Secure 2 authentication (for 3-D Secure 1 it is unnecessary).\n\t\tDepending on the type of channel interface that is used to initiate the transaction (deviceChannel), the parameter is mandatory or optional:\n\t\t· Browser-based authentication — optional\n\t\t· Application-based authentication — mandator\n\t\tData for SDK collected from the order threeDS2Params parameter is stored in the THREEDS2_TRANS_SDK_INFO database table."
                },
                "userName": {
                    "description": "User credentials\nLogin of the API user on whose behalf requests are processed for a particular merchant.",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1
                }
            }
        },
        "orderregistration.OrderRegistrationResponse": {
            "type": "object",
            "properties": {
                "errorCode": {
                    "description": "Response code",
                    "type": "string"
                },
                "errorMessage": {
                    "description": "Error message (in requested language, empty on success)",
                    "type": "string"
                },
                "formUrl": {
                    "description": "URL of the payment page (absent on error)",
                    "type": "string"
                },
                "orderId": {
                    "description": "Unique order ID generated by EPG (absent on error)",
                    "type": "string"
                },
                "recurrenceId": {
                    "description": "Identifier for recurring payments (only for recurring payments)",
                    "type": "string"
                }
            }
        }
    }
}